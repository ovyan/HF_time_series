import numpy as npimport pandas as pdimport matplotlib.pyplot as pltfrom pandas.plotting import lag_plotfrom pandas import datetimefrom statsmodels.tsa.arima_model import ARIMA, ARMAfrom statsmodels.tsa.statespace.sarimax import SARIMAX#from sktime.forecasting.arima import AutoARIMAfrom sklearn.metrics import mean_squared_errorimport tensorflow.compat.v1 as tfimport tensorflow as tf # This code has been tested with TensorFlow 1.6from sklearn.preprocessing import MinMaxScalerfrom tensorflow.python.framework import opsfrom statsmodels.tsa.ar_model import AutoRegfrom sklearn.metrics import mean_squared_errorfrom sklearn.model_selection import train_test_splitfrom sklearn.ensemble import RandomForestClassifierfrom sklearn.tree import DecisionTreeClassifierimport statsmodels.api as smdf = pd.read_csv("Binance.csv")df_2 = pd.read_csv("Binance2.csv")df.head(5)df = df.sort_values(by='date',ascending=True)df1 = df.head(1000)kek = df_2.head(1000)from pmdarima.arima import auto_arimatrain_data, test_data = df1[0:300], df1[300:]training_data = train_data['close'].valuestest_data = test_data['close'].valuesarima_model = auto_arima(training_data, start_p=0, d=1, start_q=0, max_p=5,max_q=5, start_P=0, D=1, start_Q=0, max_P=5, max_D=5, max_Q=5, m=12, seasonal=True, error_action='warn', trace=True, supress_warnings=True, stepwise=True, random_state=20, n_fits=50)arima_model.fit(training_data)prediction = arima_model.predict()plt.figure(figsize = (18,9))plt.plot(range(0, len(train_data)+len(prediction)), df1['close'].values[:len(train_data)+len(prediction)], color = 'tab:green', label = '')plt.plot(range(0, len(train_data)), training_data, color = 'tab:blue')plt.plot(range(len(train_data),len(train_data)+len(prediction)), prediction, color = 'tab:orange')plt.legend(loc='Left corner')plt.show()plt.figure(figsize = (18,9))plt.plot(range(0,len(yhat)), yhat-test_data[:100], color = 'tab:orange')plt.xlabel('Date',fontsize=18)plt.ylabel('Mid Price',fontsize=18)plt.show()from pmdarima.arima import auto_arimatrain_data, test_data = kek[0:30], kek[30:]training_data = train_data['close'].valuestest_data = test_data['close'].valuesarima_model = auto_arima(training_data, start_p=0, d=1, start_q=0, max_p=5,max_q=5, start_P=0, D=1, start_Q=0, max_P=5, max_D=5, max_Q=5, m=12, seasonal=True, error_action='warn', trace=True, supress_warnings=True, stepwise=True, random_state=20, n_fits=50)arima_model.fit(training_data)prediction = arima_model.predict()plt.figure(figsize = (18,9))plt.plot(range(0, len(train_data)+len(prediction)), kek['close'].values[:len(train_data)+len(prediction)], color = 'tab:green', label = '')plt.plot(range(0, len(train_data)), training_data, color = 'tab:blue')plt.plot(range(len(train_data),len(train_data)+len(prediction)), prediction, color = 'tab:orange')plt.legend(loc='Left corner')plt.show()plt.figure(figsize = (18,9))plt.plot(range(0,len(yhat)), yhat-test_data[:100], color = 'tab:orange')plt.xlabel('Date',fontsize=18)plt.ylabel('Mid Price',fontsize=18)plt.show()